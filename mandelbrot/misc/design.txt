Design notes

----
20080824 tiles version

at the "app" level:
- record each view as a database entry
- provide a list view activity to see the history of tiles computed
  (instead of a "hidden undo stack")
- "viewer activity"

Each "screen" is:
- a list of tiles
- typically 3x4 tiles per screen
- "infinite" map: just create new tiles as they become visible
- tiles are computing when they are visible
- each tile is independant, i.e. it has it's own computation-pending state
  and its own bitmap.
- to save space, tiles do not memorize the mandelbrot "values", just the
  rendered bitmap.
- tiles are synced to disk (bitmap+attrib) in /sdcard/mandelbrot/tiles/...
  We don't want to save them in the database => too big and both are
  flash memory so there's little "speed" benefit.
  Cons: doesn't work if sdcard is not available.

----
20080901 map version

- tiles 256x256
- tile key:
    - zoom level: fixed point 23.8 (no need to unzoom -> always positive)
    - tile i,j (0,0=center of mu plan)
- width/height of a tile in mu plan is 256/zoom_fp
- step size in mu plan is 1/zoom_fp

- Tile:
    - tile key: zoom_fp, i, j
    - native_ptr : int
    - dispose()
    - 2d bitmap or gl buffer in 565
    - done if bitmap!=null

- TileContext:
    - tile list (phase2: MRU with weak refs)
    - zoom_fp
    - scroll: ofx, ofy (in pixels)
    - visible list:
        - number of max visible = (sx/size)+1 * (sy/size)+1 (e.g. 9)
        - array of N visible tiles
            - gl texture id
            - x, y, z coords (z=0)
    - when zooming, use 2 visible lists at different z

- TileView / TileGlView:
    - display visible list from context
    - forward events to context / activity
    - show hide selection (phase2)

- TileThread:
    - queue of pending tiles (prioritize new adds: LIFO)
    - for all tiles in pending queue, if not done, compute them
    - otherwise sleep
    - wake up when queued

- TileActivity:
    - setup / save / restore context
    - show hide zoom control

Panning:
- change ofx/ofy
- remove tiles from visible list
- add new tiles to visible list.
    - create Tile + add to map as needed
- refresh gl view

Zoom*2:
- create new visible list at z=1 
- move z=1->0 and (z=0->-1 with alpha 255->0)

Zoom/2:
- create new visible list at z=-1
- move z=0->1 and (z=-1->0 with alpha 0->255)

----
20081022 no-tile version

Two conflicting goals:
- precision: slow computations, as in "perfect"
- zoom: fast but imprecise heuristics, as in "Xaos".



